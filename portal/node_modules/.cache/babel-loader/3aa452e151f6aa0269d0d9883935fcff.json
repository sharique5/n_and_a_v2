{"ast":null,"code":"var _jsxFileName = \"/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js\";\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json';\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markers = [{\n  markerOffset: 0,\n  name: \"Indore\",\n  coordinates: [75.8577, 22.7196]\n}, {\n  markerOffset: 0,\n  name: \"Bhopal\",\n  coordinates: [77.4126, 23.2599]\n}];\nconst url = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937]\n};\n\nclass OutstationService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: ''\n    };\n    this.setTooltipContent = this.setTooltipContent.bind(this);\n  }\n\n  setTooltipContent(text) {\n    this.setState({\n      content: text\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n        projection: \"geoAzimuthalEqualArea\",\n        projectionConfig: {\n          center: [78.9629, 22.5937],\n          scale: 1000\n        },\n        projection: \"geoMercator\",\n        children: [/*#__PURE__*/_jsxDEV(Geographies, {\n          geography: GeoData,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: \"#EAEAEC\",\n            stroke: \"#000000\"\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), markers.map(({\n          name,\n          coordinates,\n          markerOffset\n        }) => /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: coordinates,\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            r: 5,\n            fill: \"#3D5B94\",\n            stroke: \"#3D5B94\",\n            strokeWidth: 2,\n            onMouseEnter: () => {\n              this.setTooltipContent(name);\n            },\n            onMouseLeave: () => {\n              this.setTooltipContent(\"\");\n            },\n            \"data-tip\": true,\n            \"data-for\": \"registerTip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            textAnchor: \"middle\",\n            y: markerOffset,\n            style: {\n              fontFamily: \"system-ui\",\n              fill: \"#5D5A6D\"\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n        id: \"registerTip\",\n        place: \"top\",\n        effect: \"solid\",\n        children: this.state.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OutstationService;","map":{"version":3,"sources":["/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js"],"names":["React","ComposableMap","Geographies","Geography","Marker","GeoData","ReactTooltip","markers","markerOffset","name","coordinates","url","PROJECTION_CONFIG","scale","center","OutstationService","Component","constructor","props","state","content","setTooltipContent","bind","text","setState","render","geographies","map","geo","rsmKey","fontFamily","fill"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {ComposableMap, Geographies, Geography, Marker} from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json'\nimport ReactTooltip from \"react-tooltip\";\n\nconst markers = [\n    { markerOffset: 0, name: \"Indore\", coordinates: [75.8577, 22.7196] },\n    { markerOffset: 0, name: \"Bhopal\", coordinates: [77.4126, 23.2599] }\n];\n\nconst url = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"\nconst PROJECTION_CONFIG = {\n    scale: 350,\n    center: [78.9629, 22.5937]\n};\n\nclass OutstationService extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: ''\n        }\n        this.setTooltipContent = this.setTooltipContent.bind(this)\n    }\n\n    setTooltipContent(text) {\n        this.setState({ content: text })\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <ComposableMap\n                    projection=\"geoAzimuthalEqualArea\"\n                    projectionConfig={{\n                        center: [78.9629, 22.5937],\n                        scale: 1000\n                    }}\n                    projection=\"geoMercator\"\n                >\n                    <Geographies geography={GeoData}>\n                        {({ geographies }) =>\n                            geographies\n                                .map(geo => (\n                                    <Geography\n                                        key={geo.rsmKey}\n                                        geography={geo}\n                                        fill=\"#EAEAEC\"\n                                        stroke=\"#000000\"\n                                    />\n                                ))\n                        }\n                    </Geographies>\n                    {markers.map(({ name, coordinates, markerOffset }) => (\n                        <Marker key={name} coordinates={coordinates}>\n                            <circle r={5} fill=\"#3D5B94\" stroke=\"#3D5B94\" strokeWidth={2} onMouseEnter={() => {\n                                this.setTooltipContent(name);\n                            }}\n                                    onMouseLeave={() => {\n                                        this.setTooltipContent(\"\");\n                                    }}\n\n                                    data-tip data-for=\"registerTip\"\n                                    />\n                            <text\n                                textAnchor=\"middle\"\n                                y={markerOffset}\n                                style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                            >\n                                {name}\n                            </text>\n                        </Marker>\n                    ))}\n                </ComposableMap>\n                <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n                    {this.state.content}\n                </ReactTooltip>\n            </div>\n        )\n    }\n}\n\nexport default OutstationService;"]},"metadata":{},"sourceType":"module"}