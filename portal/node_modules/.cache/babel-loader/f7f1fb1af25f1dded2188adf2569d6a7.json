{"ast":null,"code":"var _jsxFileName = \"/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js\";\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markers = [// {\n//     markerOffset: -30,\n//     name: \"Buenos Aires\",\n//     coordinates: [-58.3816, -34.6037]\n// },\n// { markerOffset: 15, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\n// { markerOffset: 15, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\n// { markerOffset: 15, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\n// { markerOffset: 15, name: \"Bogota\", coordinates: [-74.0721, 4.711] },\n// { markerOffset: 15, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\n// { markerOffset: -30, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\n// { markerOffset: -30, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\n// { markerOffset: 15, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\n// { markerOffset: 15, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\n// { markerOffset: 15, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\n{\n  markerOffset: 15,\n  name: \"Lima\",\n  coordinates: [-77.0428, -12.0464]\n}];\n\nclass OutstationService extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(GeoData);\n    return /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoAzimuthalEqualArea\",\n      projectionConfig: {\n        rotate: [58, 20, 0],\n        scale: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(Geographies, {\n        geography: GeoData,\n        children: ({\n          geographies\n        }) => geographies.filter(d => d.properties.REGION_UN === \"Americas\").map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: \"#EAEAEC\",\n          stroke: \"#D6D6DA\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), markers.map(({\n        name,\n        coordinates,\n        markerOffset\n      }) => /*#__PURE__*/_jsxDEV(Marker, {\n        coordinates: coordinates,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          fill: \"none\",\n          stroke: \"#FF5533\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          transform: \"translate(-12, -24)\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"10\",\n            r: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          textAnchor: \"middle\",\n          y: markerOffset,\n          style: {\n            fontFamily: \"system-ui\",\n            fill: \"#5D5A6D\"\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OutstationService;","map":{"version":3,"sources":["/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js"],"names":["React","ComposableMap","Geographies","Geography","Marker","GeoData","markers","markerOffset","name","coordinates","OutstationService","Component","constructor","props","render","console","log","rotate","scale","geographies","filter","d","properties","REGION_UN","map","geo","rsmKey","fontFamily","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,MAA/C,QAA4D,mBAA5D;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAEC,EAAAA,YAAY,EAAE,EAAhB;AAAoBC,EAAAA,IAAI,EAAE,MAA1B;AAAkCC,EAAAA,WAAW,EAAE,CAAC,CAAC,OAAF,EAAW,CAAC,OAAZ;AAA/C,CAhBY,CAAhB;;AAoBA,MAAMC,iBAAN,SAAgCV,KAAK,CAACW,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,wBACI,QAAC,aAAD;AACI,MAAA,UAAU,EAAC,uBADf;AAEI,MAAA,gBAAgB,EAAE;AACdY,QAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,CADM;AAEdC,QAAAA,KAAK,EAAE;AAFO,OAFtB;AAAA,8BAOI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEb,OAAxB;AAAA,kBACK,CAAC;AAAEc,UAAAA;AAAF,SAAD,KACGA,WAAW,CACNC,MADL,CACYC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,SAAb,KAA2B,UAD5C,EAEKC,GAFL,CAESC,GAAG,iBACJ,QAAC,SAAD;AAEI,UAAA,SAAS,EAAEA,GAFf;AAGI,UAAA,IAAI,EAAC,SAHT;AAII,UAAA,MAAM,EAAC;AAJX,WACSA,GAAG,CAACC,MADb;AAAA;AAAA;AAAA;AAAA,gBAHR;AAFR;AAAA;AAAA;AAAA;AAAA,cAPJ,EAqBKpB,OAAO,CAACkB,GAAR,CAAY,CAAC;AAAEhB,QAAAA,IAAF;AAAQC,QAAAA,WAAR;AAAqBF,QAAAA;AAArB,OAAD,kBACT,QAAC,MAAD;AAAmB,QAAA,WAAW,EAAEE,WAAhC;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,MAAM,EAAC,SAFX;AAGI,UAAA,WAAW,EAAC,GAHhB;AAII,UAAA,aAAa,EAAC,OAJlB;AAKI,UAAA,cAAc,EAAC,OALnB;AAMI,UAAA,SAAS,EAAC,qBANd;AAAA,kCAQI;AAAQ,YAAA,EAAE,EAAC,IAAX;AAAgB,YAAA,EAAE,EAAC,IAAnB;AAAwB,YAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAM,YAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AACI,UAAA,UAAU,EAAC,QADf;AAEI,UAAA,CAAC,EAAEF,YAFP;AAGI,UAAA,KAAK,EAAE;AAAEoB,YAAAA,UAAU,EAAE,WAAd;AAA2BC,YAAAA,IAAI,EAAE;AAAjC,WAHX;AAAA,oBAKKpB;AALL;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA,SAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,cADH,CArBL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8CH;;AArD2C;;AAwDhD,eAAeE,iBAAf","sourcesContent":["import React from 'react'\nimport {ComposableMap, Geographies, Geography, Marker} from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json'\n\nconst markers = [\n    // {\n    //     markerOffset: -30,\n    //     name: \"Buenos Aires\",\n    //     coordinates: [-58.3816, -34.6037]\n    // },\n    // { markerOffset: 15, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\n    // { markerOffset: 15, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\n    // { markerOffset: 15, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\n    // { markerOffset: 15, name: \"Bogota\", coordinates: [-74.0721, 4.711] },\n    // { markerOffset: 15, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\n    // { markerOffset: -30, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\n    // { markerOffset: -30, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\n    // { markerOffset: 15, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\n    // { markerOffset: 15, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\n    // { markerOffset: 15, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\n    { markerOffset: 15, name: \"Lima\", coordinates: [-77.0428, -12.0464] }\n];\n\n\nclass OutstationService extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        console.log(GeoData)\n        return (\n            <ComposableMap\n                projection=\"geoAzimuthalEqualArea\"\n                projectionConfig={{\n                    rotate: [58, 20, 0],\n                    scale: 400\n                }}\n            >\n                <Geographies geography={GeoData}>\n                    {({ geographies }) =>\n                        geographies\n                            .filter(d => d.properties.REGION_UN === \"Americas\")\n                            .map(geo => (\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    fill=\"#EAEAEC\"\n                                    stroke=\"#D6D6DA\"\n                                />\n                            ))\n                    }\n                </Geographies>\n                {markers.map(({ name, coordinates, markerOffset }) => (\n                    <Marker key={name} coordinates={coordinates}>\n                        <g\n                            fill=\"none\"\n                            stroke=\"#FF5533\"\n                            strokeWidth=\"2\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            transform=\"translate(-12, -24)\"\n                        >\n                            <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                            <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                        </g>\n                        <text\n                            textAnchor=\"middle\"\n                            y={markerOffset}\n                            style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                        >\n                            {name}\n                        </text>\n                    </Marker>\n                ))}\n            </ComposableMap>\n        )\n    }\n}\n\nexport default OutstationService;"]},"metadata":{},"sourceType":"module"}