{"ast":null,"code":"var _jsxFileName = \"/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js\";\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markers = [// {\n//     markerOffset: -30,\n//     name: \"Buenos Aires\",\n//     coordinates: [-58.3816, -34.6037]\n// },\n// { markerOffset: 15, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\n// { markerOffset: 15, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\n// { markerOffset: 15, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\n// { markerOffset: 15, name: \"Bogota\", coordinates: [-74.0721, 4.711] },\n// { markerOffset: 15, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\n// { markerOffset: -30, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\n// { markerOffset: -30, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\n// { markerOffset: 15, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\n// { markerOffset: 15, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\n// { markerOffset: 15, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\n{\n  markerOffset: 15,\n  name: \"Lima\",\n  coordinates: [22.7196, 75.8577]\n}];\nconst url = \"https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\";\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937]\n};\n\nclass OutstationService extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(GeoData);\n    return /*#__PURE__*/_jsxDEV(ComposableMap, {\n      projectionConfig: PROJECTION_CONFIG,\n      projection: \"geoMercator\",\n      width: 600,\n      height: 220,\n      \"data-tip\": \"\",\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: GeoData,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          const current = data.find(s => s.id === geo.id);\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: current ? colorScale(current.value) : DEFAULT_COLOR,\n            style: geographyStyle,\n            onMouseEnter: onMouseEnter(geo, current),\n            onMouseLeave: onMouseLeave\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OutstationService;","map":{"version":3,"sources":["/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js"],"names":["React","ComposableMap","Geographies","Geography","Marker","GeoData","markers","markerOffset","name","coordinates","url","PROJECTION_CONFIG","scale","center","OutstationService","Component","constructor","props","render","console","log","geographies","map","geo","current","data","find","s","id","colorScale","value","DEFAULT_COLOR","geographyStyle","onMouseEnter","onMouseLeave","rsmKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,MAA/C,QAA4D,mBAA5D;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAEC,EAAAA,YAAY,EAAE,EAAhB;AAAoBC,EAAAA,IAAI,EAAE,MAA1B;AAAkCC,EAAAA,WAAW,EAAE,CAAC,OAAD,EAAU,OAAV;AAA/C,CAhBY,CAAhB;AAmBA,MAAMC,GAAG,GAAG,uFAAZ;AACA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV;AAFc,CAA1B;;AAKA,MAAMC,iBAAN,SAAgCd,KAAK,CAACe,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACA,wBACI,QAAC,aAAD;AACI,MAAA,gBAAgB,EAAEM,iBADtB;AAEI,MAAA,UAAU,EAAC,aAFf;AAGI,MAAA,KAAK,EAAE,GAHX;AAII,MAAA,MAAM,EAAE,GAJZ;AAKI,kBAAS,EALb;AAAA,6BAOI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEN,OAAxB;AAAA,kBACK,CAAC;AAAEgB,UAAAA;AAAF,SAAD,KACGA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACnB,gBAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACK,EAA5B,CAAhB;AACA,8BACI,QAAC,SAAD;AAEI,YAAA,SAAS,EAAEL,GAFf;AAGI,YAAA,IAAI,EAAEC,OAAO,GAAGK,UAAU,CAACL,OAAO,CAACM,KAAT,CAAb,GAA+BC,aAHhD;AAII,YAAA,KAAK,EAAEC,cAJX;AAKI,YAAA,YAAY,EAAEC,YAAY,CAACV,GAAD,EAAMC,OAAN,CAL9B;AAMI,YAAA,YAAY,EAAEU;AANlB,aACSX,GAAG,CAACY,MADb;AAAA;AAAA;AAAA;AAAA,kBADJ;AAUH,SAZD;AAFR;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AAlC2C;;AAqChD,eAAerB,iBAAf","sourcesContent":["import React from 'react'\nimport {ComposableMap, Geographies, Geography, Marker} from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json'\n\nconst markers = [\n    // {\n    //     markerOffset: -30,\n    //     name: \"Buenos Aires\",\n    //     coordinates: [-58.3816, -34.6037]\n    // },\n    // { markerOffset: 15, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\n    // { markerOffset: 15, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\n    // { markerOffset: 15, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\n    // { markerOffset: 15, name: \"Bogota\", coordinates: [-74.0721, 4.711] },\n    // { markerOffset: 15, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\n    // { markerOffset: -30, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\n    // { markerOffset: -30, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\n    // { markerOffset: 15, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\n    // { markerOffset: 15, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\n    // { markerOffset: 15, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\n    { markerOffset: 15, name: \"Lima\", coordinates: [22.7196, 75.8577] }\n];\n\nconst url = \"https://rawgit.com/Anujarya300/bubble_maps/master/data/geography-data/india.topo.json\"\nconst PROJECTION_CONFIG = {\n    scale: 350,\n    center: [78.9629, 22.5937]\n};\n\nclass OutstationService extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        console.log(GeoData)\n        return (\n            <ComposableMap\n                projectionConfig={PROJECTION_CONFIG}\n                projection=\"geoMercator\"\n                width={600}\n                height={220}\n                data-tip=\"\"\n            >\n                <Geographies geography={GeoData}>\n                    {({ geographies }) =>\n                        geographies.map(geo => {\n                            const current = data.find(s => s.id === geo.id);\n                            return (\n                                <Geography\n                                    key={geo.rsmKey}\n                                    geography={geo}\n                                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\n                                    style={geographyStyle}\n                                    onMouseEnter={onMouseEnter(geo, current)}\n                                    onMouseLeave={onMouseLeave}\n                                />\n                            );\n                        })\n                    }\n                </Geographies>\n            </ComposableMap>\n        )\n    }\n}\n\nexport default OutstationService;"]},"metadata":{},"sourceType":"module"}