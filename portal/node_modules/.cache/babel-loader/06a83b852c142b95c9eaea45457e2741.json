{"ast":null,"code":"var _jsxFileName = \"/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js\";\nimport React from 'react';\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json';\nimport ReactTooltip from \"react-tooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markers = [{\n  markerOffset: 20,\n  name: \"Indore\",\n  coordinates: [75.8577, 22.7196]\n}, {\n  markerOffset: 20,\n  name: \"Bhopal\",\n  coordinates: [77.4126, 23.2599]\n}, {\n  markerOffset: 20,\n  name: \"Delhi\",\n  coordinates: [77.1025, 28.7041]\n}, {\n  markerOffset: 20,\n  name: \"Mumbai\",\n  coordinates: [72.8777, 19.0760]\n}, {\n  markerOffset: 20,\n  name: \"Hyderabad\",\n  coordinates: [78.3850, 17.3850]\n}, {\n  markerOffset: 20,\n  name: \"Chennai\",\n  coordinates: [80.2707, 13.0827]\n}, {\n  markerOffset: 20,\n  name: \"Kolkata\",\n  coordinates: [88.3639, 22.5726]\n}];\n\nclass OutstationService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: ''\n    };\n    this.setTooltipContent = this.setTooltipContent.bind(this);\n  }\n\n  setTooltipContent(text) {\n    this.setState({\n      content: text\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12 col-sm-12 col-lg-12 col-xs-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Our service network includes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ComposableMap, {\n          projection: \"geoAzimuthalEqualArea\",\n          projectionConfig: {\n            center: [78.9629, 22.5937],\n            scale: 1000\n          },\n          projection: \"geoMercator\",\n          children: [/*#__PURE__*/_jsxDEV(Geographies, {\n            geography: GeoData,\n            children: ({\n              geographies\n            }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: \"#EAEAEC\",\n              stroke: \"#000000\"\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), markers.map(({\n            name,\n            coordinates,\n            markerOffset\n          }) => /*#__PURE__*/_jsxDEV(Marker, {\n            coordinates: coordinates,\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              r: 10,\n              fill: \"#3D5B94\",\n              stroke: \"#3D5B94\",\n              strokeWidth: 2,\n              onMouseEnter: () => {\n                this.setTooltipContent(name);\n              },\n              onMouseLeave: () => {\n                this.setTooltipContent(\"\");\n              },\n              \"data-tip\": true,\n              \"data-for\": \"registerTip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              textAnchor: \"middle\",\n              y: markerOffset,\n              style: {\n                fontFamily: \"system-ui\",\n                fill: \"#3D5B94\"\n              },\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n          id: \"registerTip\",\n          place: \"top\",\n          effect: \"solid\",\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OutstationService;","map":{"version":3,"sources":["/Users/admin/dev/n_and_a_v2/src/components/OutstationService.js"],"names":["React","ComposableMap","Geographies","Geography","Marker","GeoData","ReactTooltip","markers","markerOffset","name","coordinates","OutstationService","Component","constructor","props","state","content","setTooltipContent","bind","text","setState","render","center","scale","geographies","map","geo","rsmKey","fontFamily","fill"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {ComposableMap, Geographies, Geography, Marker} from \"react-simple-maps\";\nimport GeoData from '../db/IndiaMap.json'\nimport ReactTooltip from \"react-tooltip\";\n\nconst markers = [\n    { markerOffset: 20, name: \"Indore\", coordinates: [75.8577, 22.7196] },\n    { markerOffset: 20, name: \"Bhopal\", coordinates: [77.4126, 23.2599] },\n    { markerOffset: 20, name: \"Delhi\", coordinates: [77.1025, 28.7041] },\n    { markerOffset: 20, name: \"Mumbai\", coordinates: [72.8777, 19.0760] },\n    { markerOffset: 20, name: \"Hyderabad\", coordinates: [78.3850, 17.3850] },\n    { markerOffset: 20, name: \"Chennai\", coordinates: [80.2707, 13.0827] },\n    { markerOffset: 20, name: \"Kolkata\", coordinates: [88.3639, 22.5726] }\n];\n\nclass OutstationService extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            content: ''\n        }\n        this.setTooltipContent = this.setTooltipContent.bind(this)\n    }\n\n    setTooltipContent(text) {\n        this.setState({ content: text })\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12 col-sm-12 col-lg-12 col-xs-12\">\n                    <h3>Our service network includes</h3>\n                    <ComposableMap\n                        projection=\"geoAzimuthalEqualArea\"\n                        projectionConfig={{\n                            center: [78.9629, 22.5937],\n                            scale: 1000\n                        }}\n                        projection=\"geoMercator\"\n                    >\n                        <Geographies geography={GeoData}>\n                            {({ geographies }) =>\n                                geographies\n                                    .map(geo => (\n                                        <Geography\n                                            key={geo.rsmKey}\n                                            geography={geo}\n                                            fill=\"#EAEAEC\"\n                                            stroke=\"#000000\"\n                                        />\n                                    ))\n                            }\n                        </Geographies>\n                        {markers.map(({ name, coordinates, markerOffset }) => (\n                            <Marker key={name} coordinates={coordinates}>\n                                <circle r={10} fill=\"#3D5B94\" stroke=\"#3D5B94\" strokeWidth={2} onMouseEnter={() => {\n                                    this.setTooltipContent(name);\n                                }}\n                                        onMouseLeave={() => {\n                                            this.setTooltipContent(\"\");\n                                        }}\n\n                                        data-tip data-for=\"registerTip\"\n                                />\n                                <text\n                                    textAnchor=\"middle\"\n                                    y={markerOffset}\n                                    style={{ fontFamily: \"system-ui\", fill: \"#3D5B94\" }}\n                                >\n                                    {name}\n                                </text>\n                            </Marker>\n                        ))}\n                    </ComposableMap>\n                    <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n                        {this.state.content}\n                    </ReactTooltip>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OutstationService;"]},"metadata":{},"sourceType":"module"}